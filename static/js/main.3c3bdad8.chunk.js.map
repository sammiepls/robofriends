{"version":3,"sources":["reducers/searchReducer.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","App.js","actions/searchActions.js","constants.js","serviceWorker.js","index.js"],"names":["initialStateSearch","searchField","initialStateRobots","isPending","robots","error","Card","id","name","email","className","src","alt","CardList","map","robot","key","SearchBox","searchChange","aria-label","type","value","onChange","Scroll","children","style","overflowY","border","height","padding","ErrorBoundary","props","state","hasError","info","this","setState","React","Component","CounterButton","memo","useState","count","setCount","color","onClick","prevState","App","dispatch","useDispatch","useEffect","fetch","then","resp","json","users","payload","catch","err","useSelector","requestRobots","searchRobots","filteredRobots","filter","toLowerCase","includes","event","target","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3c3bdad8.chunk.js","sourcesContent":["import { CHANGE_SEARCHFIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"../constants\";\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n}\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return { ...state, searchField: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, isPending: false, robots: action.payload };\n    case REQUEST_ROBOTS_FAILED:\n      return { ...state, isPending: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <article className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?size=200x200`} alt={name} />\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </article>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) =>{\n  return robots.map((robot) => <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} />)};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <form className=\"pa2\">\n      <label>\n        <h4>Search Robots</h4>\n        <input\n        aria-label='Search Robots'\n          className=\"pa3 ba b--green bg-lightest-blue\"\n          type=\"search\"\n          name=\"searchrobot\"\n          value={searchField}\n          onChange={searchChange}\n        />\n      </label>\n    </form>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = ({children}) => {\n return <div style={{overflowY:'scroll', border:'5px solid black', height: '500px', padding:'10px'}}>\n    {children}\n  </div>\n}\n\nexport default Scroll;\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops sorry!</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, {useState} from \"react\";\n\n// class CounterButton extends React.PureComponent {\n//   constructor() {\n//     super();\n//     this.state = {\n//       count: 0,\n//     };\n//   }\n\n//   shouldComponentUpdate(nextProps, nextState) {\n//     return this.state.count !== nextState.count ? true : false\n//   }\n\n//   updateCount = () => {\n//     this.setState(state => ({ count: state.count + 1 }));\n//   };\n\n//   render() {\n//     console.log(\"CounterButton\");\n//     return (\n//       <button color={this.props.color} onClick={this.updateCount}>\n//         Count: {this.state.count}\n//       </button>\n//     );\n//   }\n// }\n\n// export default CounterButton;\n\nconst CounterButton = React.memo((props) => {\n  const [count, setCount] = useState(0)\n\n  return (\n      <button color={props.color} onClick={() => setCount(prevState => prevState + 1)}>\n        Count: {count}\n      </button>\n    );\n})\n\nexport default CounterButton\n","import React from \"react\";\nimport CounterButton from \"./CounterButton\"\n\nconst Header = () => {\n  return <><h1>Robofriends</h1><CounterButton/></>};\n\n// class Header extends React.Component {\n\n//   shouldComponentUpdate(nextProps, nextState) {\n//     return false;\n//   }\n\n//   render() {\n//     console.log(\"Header\")\n//   return <><h1>Robofriends</h1>\n//   <CounterButton/>\n//   </>};\n// }\n\nexport default React.memo(Header);\n","import React, {useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setSearchField,requestRobots} from \"./actions/searchActions\";\nimport CardList from \"./components/CardList\";\nimport SearchBox from \"./components/SearchBox\";\nimport Scroll from \"./components/Scroll\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nconst App = () => {\nconst dispatch = useDispatch();\n\nconst onSearchChange = (event) => dispatch(setSearchField(event.target.value));\n\nuseEffect(() => {\n  dispatch(requestRobots())\n}, [dispatch])\n\nconst robots = useSelector(state => state.requestRobots.robots || [])\nconst searchField = useSelector(state => state.searchRobots.searchField);\nconst isPending = useSelector(state => state.requestRobots.isPending);\n\nconst filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase())\n})\n\n\nreturn isPending ? (\n  <h1>Loading</h1>\n) : (\n  <div className=\"App tc\">\n    <Header />\n    <SearchBox searchChange={onSearchChange} />\n    <Scroll>\n      <ErrorBoundary>\n        <CardList robots={filteredRobots} />\n      </ErrorBoundary>\n    </Scroll>\n  </div>\n);\n}\n\nexport default App;\n\n","import { CHANGE_SEARCHFIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"../constants\";\n\nexport const setSearchField = text => ({type: CHANGE_SEARCHFIELD, payload: text})\n\nexport const requestRobots = () => dispatch => {\n  dispatch({type: REQUEST_ROBOTS_PENDING})\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((resp) => resp.json())\n    .then((users) => {\n      dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: users})\n    }).catch(err => dispatch({type: REQUEST_ROBOTS_FAILED, payload: err}))\n}\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./wdyr\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\"\nimport thunkMiddleware from \"redux-thunk\";\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\n// import {createLogger} from 'redux-logger';\nimport {searchRobots, requestRobots} from \"./reducers/searchReducer\"\nimport App from \"./App\";\nimport \"tachyons\";\nimport \"./index.css\";\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = combineReducers({searchRobots, requestRobots})\n// const logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register()\n"],"sourceRoot":""}